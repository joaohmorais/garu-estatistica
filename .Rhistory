geom_label(aes(x=mode, y=0, label = paste0("Moda"))) +
theme_classic() +
scale_fill_manual(values = c("steelblue", "red"),
labels = c("", "Moda")) +
theme(legend.position="none") +
theme(legend.title = element_blank()) +
labs(x=" ", y = " ")
tab
elementos
tab <- as.data.frame(table(elementos))
tab$elementos <- as.numeric(tab$elementos)
mean <- mean(elementos)
mode <- getmode(elementos)
tab$isMode <- ifelse(tab$elementos == mode, TRUE, FALSE)
ggplot(data=tab, aes(x=elementos, y=Freq, fill = isMode)) +
geom_bar(stat="identity", position=position_dodge(), color = "black") +
geom_text(aes(label=Freq), vjust=-0.5, size=3.5)+
annotate("segment", x = mean, xend = mean, y = 0, yend = max(tab$Freq) + 0.5, colour = "black", size=1) +
#geom_segment(aes(x=mean, xend=mean, y=0, yend=max(tab$Freq) + 0.5)) +
geom_label(aes(x=mean, y=max(tab$Freq) + 0.5, label = paste0("Média = ", mean))) +
geom_label(aes(x=mode, y=0, label = paste0("Moda"))) +
theme_classic() +
scale_fill_manual(values = c("steelblue", "red"),
labels = c("", "Moda")) +
theme(legend.position="none") +
theme(legend.title = element_blank()) +
labs(x=" ", y = " ")
tab <- as.data.frame(table(elementos))
tab$elementos <- as.numeric(as.character(tab$elementos))
mean <- mean(elementos)
mode <- getmode(elementos)
tab$isMode <- ifelse(tab$elementos == mode, TRUE, FALSE)
ggplot(data=tab, aes(x=elementos, y=Freq, fill = isMode)) +
geom_bar(stat="identity", position=position_dodge(), color = "black") +
geom_text(aes(label=Freq), vjust=-0.5, size=3.5)+
annotate("segment", x = mean, xend = mean, y = 0, yend = max(tab$Freq) + 0.5, colour = "black", size=1) +
#geom_segment(aes(x=mean, xend=mean, y=0, yend=max(tab$Freq) + 0.5)) +
geom_label(aes(x=mean, y=max(tab$Freq) + 0.5, label = paste0("Média = ", mean))) +
geom_label(aes(x=mode, y=0, label = paste0("Moda"))) +
theme_classic() +
scale_fill_manual(values = c("steelblue", "red"),
labels = c("", "Moda")) +
theme(legend.position="none") +
theme(legend.title = element_blank()) +
labs(x=" ", y = " ")
ggplot(data=tab, aes(x=elementos, y=Freq, fill = isMode)) +
geom_bar(stat="identity", position=position_dodge(), color = "black") +
geom_text(aes(label=Freq), vjust=-0.5, size=3.5)+
annotate("segment", x = mean, xend = mean, y = 0, yend = max(tab$Freq) + 0.5, colour = "black", size=1) +
#geom_segment(aes(x=mean, xend=mean, y=0, yend=max(tab$Freq) + 0.5)) +
geom_label(aes(x=mean, y=max(tab$Freq) + 0.5, label = paste0("Média = ", mean))) +
geom_label(aes(x=mode, y=0, label = paste0("Moda"))) +
theme_classic() +
scale_fill_manual(values = c("steelblue", "red"),
labels = c("", "Moda")) +
scale_x_continuous(breaks = round(seq(min(tab$elementos), max(tab$elementos), by = 1))) +
theme(legend.position="none") +
theme(legend.title = element_blank()) +
labs(x=" ", y = " ")
ggplot(data=tab, aes(x=elementos, y=Freq, fill = isMode)) +
geom_bar(stat="identity", position=position_dodge(), color = "black") +
geom_text(aes(label=Freq), vjust=-0.5, size=3.5)+
annotate("segment", x = mean, xend = mean, y = 0, yend = max(tab$Freq) + 0.5, colour = "black", size=1) +
#geom_segment(aes(x=mean, xend=mean, y=0, yend=max(tab$Freq) + 0.5)) +
geom_label(aes(x=mean, y=max(tab$Freq) + 0.5, label = paste0("Média = ", mean))) +
annotate("text", x = mode, y = 1, label = "Moda" , color="black", size=2 , angle=0) +
#geom_label(aes(x=mode, y=0, label = paste0("Moda"))) +
theme_classic() +
scale_fill_manual(values = c("steelblue", "red"),
labels = c("", "Moda")) +
scale_x_continuous(breaks = round(seq(min(tab$elementos), max(tab$elementos), by = 1))) +
theme(legend.position="none") +
theme(legend.title = element_blank()) +
labs(x=" ", y = " ")
ggplot(data=tab, aes(x=elementos, y=Freq, fill = isMode)) +
geom_bar(stat="identity", position=position_dodge(), color = "black") +
geom_text(aes(label=Freq), vjust=-0.5, size=3.5)+
annotate("segment", x = mean, xend = mean, y = 0, yend = max(tab$Freq) + 0.5, colour = "black", size=1) +
#geom_segment(aes(x=mean, xend=mean, y=0, yend=max(tab$Freq) + 0.5)) +
geom_label(aes(x=mean, y=max(tab$Freq) + 0.5, label = paste0("Média = ", mean))) +
annotate("text", x = mode, y = 1, label = "Moda" , color="black", size=5 , angle=0) +
#geom_label(aes(x=mode, y=0, label = paste0("Moda"))) +
theme_classic() +
scale_fill_manual(values = c("steelblue", "red"),
labels = c("", "Moda")) +
scale_x_continuous(breaks = round(seq(min(tab$elementos), max(tab$elementos), by = 1))) +
theme(legend.position="none") +
theme(legend.title = element_blank()) +
labs(x=" ", y = " ")
ggplot(data=tab, aes(x=elementos, y=Freq, fill = isMode)) +
geom_bar(stat="identity", position=position_dodge(), color = "black") +
geom_text(aes(label=Freq), vjust=-0.5, size=3.5)+
annotate("segment", x = mean, xend = mean, y = 0, yend = max(tab$Freq) + 0.5, colour = "black", size=1) +
#geom_segment(aes(x=mean, xend=mean, y=0, yend=max(tab$Freq) + 0.5)) +
geom_label(aes(x=mean, y=max(tab$Freq) + 0.5, label = paste0("Média = ", mean))) +
annotate("text", x = mode, y = 1, label = "Moda" , color="black", size=4 , angle=0) +
#geom_label(aes(x=mode, y=0, label = paste0("Moda"))) +
theme_classic() +
scale_fill_manual(values = c("steelblue", "red"),
labels = c("", "Moda")) +
scale_x_continuous(breaks = round(seq(min(tab$elementos), max(tab$elementos), by = 1))) +
theme(legend.position="none") +
theme(legend.title = element_blank()) +
labs(x=" ", y = " ")
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
v <- c(1, 2, 2, 2, 3, 4, 4, 4, 5)
unique(v)
match(v, unique(v))
tabulate(match(v, unique(v)))
which.max(tabulate(match(v, unique(v))))
?which.max
uv <- unique(v)
tab <- tabulate(match(v, uv))
uv[tab == max(tab)]
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
?annotate
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
?renderui
?renderUI
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
?updateActionButton
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
?conditionalPanel
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
p("A média é legal", id = "mediaTexto")
library(shinyjs)
install.packages("shinyjs")
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
?withMathJax
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
library(knitr)
?knit
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
library(tikzDevice)
install.packages("tikzDevice")
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
?tikz
runApp('Documents/BIG/v2')
library(latex2exp)
install.packages("latex2exp")
library(latex2exp)
TeX('$\\alpha^\\beta$')
x <- seq(0, 4, length.out=100)
alpha <- 1:5
plot(x, xlim=c(0, 4), ylim=c(0, 10),
xlab='x', ylab=TeX('$\\alpha  x^\\alpha$, where $\\alpha \\in 1\\ldots 5$'),
type='n', main=TeX('Using $\\LaTeX$ for plotting in base graphics!'))
plot(x, xlim=c(0, 4), ylim=c(0, 10),
xlab='x', ylab=TeX('$\\alpha  x^\\alpha$, where $\\alpha \\in 1\\ldots 5$'),
type='n', main=TeX('Using $\\LaTeX$ for plotting in base graphics!'))
plot(x, xlim=c(0, 4), ylim=c(0, 10),
xlab='x', ylab=TeX('$\\alpha  x^\\alpha$, where $\\alpha \\in 1\\ldots 5$'),
type='n', main=TeX('Using $\\LaTeX$ for plotting in base graphics!'))
x <- seq(0, 4, length.out=100)
alpha <- 1:5
plot(x, xlim=c(0, 4), ylim=c(0, 10),
xlab='x', ylab=TeX('$\\alpha  x^\\alpha$, where $\\alpha \\in 1\\ldots 5$'),
type='n', main=TeX('Using $\\LaTeX$ for plotting in base graphics!'))
invisible(sapply(alpha, function(a) lines(x, a*x^a, col=a)))
legend('topleft', legend=TeX(sprintf("$\\alpha = %d$", alpha)),
lwd=1, col=alpha)
x <- seq(0, 4, length.out=100)
alpha <- 1:5
plot(x, xlim=c(0, 4), ylim=c(0, 10),
xlab='x', ylab=TeX('$\\alpha  x^\\alpha$, where $\\alpha \\in 1\\ldots 5$'),
type='n', main=TeX('Using $\\LaTeX$ for plotting in base graphics!'))
invisible(sapply(alpha, function(a) lines(x, a*x^a, col=a)))
legend('topleft', legend=TeX(sprintf("$\\alpha = %d$", alpha)),
lwd=1, col=alpha)
plot(x, xlim=c(0, 4), ylim=c(0, 10))
plot(x, xlim=c(0, 4), ylim=c(0, 10))
x <- seq(0, 4, length.out=100)
alpha <- 1:5
plot(x, xlim=c(0, 4), ylim=c(0, 10),
xlab='x', ylab=TeX('$\\alpha  x^\\alpha$, where $\\alpha \\in 1\\ldots 5$'),
type='n', main=TeX('Using $\\LaTeX$ for plotting in base graphics!'))
invisible(sapply(alpha, function(a) lines(x, a*x^a, col=a)))
legend('topleft', legend=TeX(sprintf("$\\alpha = %d$", alpha)),
lwd=1, col=alpha)
library(latex2exp)
x <- seq(0, 4, length.out=100)
alpha <- 1:5
plot(x, xlim=c(0, 4), ylim=c(0, 10),
xlab='x', ylab=TeX('$\\alpha  x^\\alpha$, where $\\alpha \\in 1\\ldots 5$'),
type='n', main=TeX('Using $\\LaTeX$ for plotting in base graphics!'))
invisible(sapply(alpha, function(a) lines(x, a*x^a, col=a)))
legend('topleft', legend=TeX(sprintf("$\\alpha = %d$", alpha)),
lwd=1, col=alpha)
shiny::runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
shiny::runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
?verbatimTextOutput
runApp('Documents/BIG/v2')
withMathJax(helpText("Média:  $$\\frac{1}{n} \\sum_{i=1}^{n} x_{i}$$"))
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
h4("media")
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
data <- read.csv("data/food-choices/clean_data.csv")[,-1]
colnames(data) <- gsub(".", ' ',colnames(data), fixed = TRUE)
example_dataframe <- as.data.frame(rbind(
c("Sexo", "'Masculino', 'Feminino'", "Qualitativa Nominal"),
c("Ano letivo", "1, 2, 3, 4...", "Quantitativa Discreta"),
c("Peso", "61.2, 85, 119.3", "Quantitativa Contínua"),
c("Trabalho", "'Tempo Integral', 'Meio Período', 'Não trabalha'", "Qualitativa Ordinal"),
c("Relacionamento", "'Solteirx', 'Em um relacionamento', 'Morando junto', ...", "Qualitativa Nominal"),
c("Cozinha", "'Sempre', 'Quase todo dia', 'Nunca', ...", "Qualitativa Ordinal"),
c("Come Fora", "'Sempre', 'Quase todo dia', 'Nunca'", "Qualitativa Ordinal"),
c("Culinária Favorita", "'Árabe', 'Oriental', 'Africana', ...", "Qualitativa Nominal"),
c("Pratica exercícios", "'Sempre', 'Quase todo dia', 'Nunca'", "Qualitativa Ordinal"),
c("Pratica esportes", "'Sim', 'Não'", "Qualitativa Nominal"),
c("Toma Vitamina", "'Sim', 'Não'", "Qualitativa Nominal")
))
colnames(example_dataframe) <- c("Variável", "Possíveis Valores", "Tipo de Variável")
tab_frequencia_relacionamento <- as.data.frame(table(data$Relacionamento))
tab_frequencia_relacionamento$prop <- round(tab_frequencia_relacionamento$Freq/sum(tab_frequencia_relacionamento$Freq), digits = 4)
tab_frequencia_relacionamento$porc <- scales::percent(tab_frequencia_relacionamento$prop)
colnames(tab_frequencia_relacionamento) <- c("Relacionamento", "Frequência", "Proporção", "Porcentagem")
freq_peso <- cut(data$Peso, breaks = c(45, 60, 75, 90, 105, 120))
tab_frequencia_peso <- as.data.frame(with(data, table(freq_peso, useNA = 'ifany')))
tab_frequencia_peso$prop <- round(tab_frequencia_peso$Freq/sum(tab_frequencia_peso$Freq), digits = 4)
tab_frequencia_peso$porc<- scales::percent(tab_frequencia_peso$prop)
colnames(tab_frequencia_peso) <- c("Faixa de peso", "Frequência", "Proporção", "Porcentagem")
as.data.frame(table(data$`Ano letivo`))
tab_frequencia_ano_letivo <- as.data.frame(table(data$`Ano letivo`))
tab_frequencia_ano_letivo$prop <- round(tab_frequencia_ano_letivo$Freq/sum(tab_frequencia_ano_letivo$Freq), digits = 4)
tab_frequencia_ano_letivo$porc <- scales::percent(tab_frequencia_ano_letivo$prop)
colnames(tab_frequencia_ano_letivo) <- c("Ano Letivo", "Frequência", "Proporção", "Porcentagem")
tab_frequencia_ano_letivo
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
p("Em alguns casos medidas como média, moda e mediana podem não nos trazer
informações suficientes sobre o conjunto de observações. Afinal,
as medidas anteriores são medidas de posição. É interessente
analisarmos medidas de dispersão, como a variância. Esta representa
o quão desviados os dados estão de sua média. Para isso, precisamos
calcular a distância de cada elemento e a média, somar o quadrado dessas
distâncias e dividir pelo número de observação. ", id = "medianaTexto")
var(elementos)
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
hidden(p("oi"))
hidden(p("oi", id = "par"))
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
output$graficoElementos <- renderPlot({
input$geraElementos
tab <- as.data.frame(table(elementos))
tab$elementos <- as.numeric(as.character(tab$elementos))
mean <- round(mean(elementos), 2)
mode <- getmode(elementos)
tab$isMode <- ifelse(tab$elementos %in% mode, TRUE, FALSE)
ggplot(data=tab, aes(x=elementos, y=Freq, fill = isMode)) +
geom_bar(stat="identity", position=position_dodge(), color = "black", width = 0.9) +
geom_text(aes(label=Freq), vjust=-0.5, size=3.5)+
annotate("segment", x = mean, xend = mean, y = 0, yend = max(tab$Freq) + 0.5, colour = "black", size=1) +
#geom_segment(aes(x=mean, xend=mean, y=0, yend=max(tab$Freq) + 0.5)) +
geom_label(aes(x=mean, y=max(tab$Freq) + 0.5, label = paste0("Média = ", mean))) +
annotate("text", x = mode, y = 0.5, label = "Moda" , color="black", size=4 , angle=0) +
#geom_label(aes(x=mode, y=0, label = paste0("Moda"))) +
theme_classic() +
scale_fill_manual(values = c("steelblue", "red"),
labels = c("", "Moda")) +
scale_x_continuous(breaks = round(seq(min(tab$elementos), max(tab$elementos), by = 1))) +
theme(legend.position="none") +
theme(legend.title = element_blank()) +
labs(x=" ", y = " ")
})
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
elementos
sample(elementos, 3)
sample(elementos, 3)
sample(elementos, 3)
sample(elementos, 3)
sample(elementos, 3)
?sample
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
(length(elementos)%%2 == 0)
?quantile()
ex <- c(2, 3, 5, 7, 8, 10, 11, 12, 15, 67)
quantile(ex)
q <- quantile(ex)
q[1]
q[2]
q[1,1]
typeof(q)
q[1] + q[1]
q <- as.vector(quantile(ex))
q
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/garu')
runApp('Documents/BIG/v2')
shiny::runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
shiny::runApp('Documents/BIG/v2')
shiny::runApp('Documents/BIG/v2')
runApp('Documents/BIG/v2')
shiny::runApp('Documents/BIG/v2')
data <- read.csv("data/food-choices/clean_data.csv")[,-1]
altura <- read.csv("data/altura.csv")[-1]
colnames(data) <- gsub(".", ' ',colnames(data), fixed = TRUE)
data$Cozinha <- factor(data$Cozinha, levels = c("Nunca", "Durante as férias", "Às vezes", "Quase todo dia", "Todo dia"))
data$`Come fora` <- factor(data$`Come fora`, levels = c("Nunca", "1-2 vezes", "2-3 vezes", "3-5 vezes", "Todo dia"))
data$`Pratica exercícios` <- factor(data$`Pratica exercícios`, levels = c("Nunca", "Uma vez por semana", "2-3 vezes por semana", "Todo dia"))
data$`Vegetais nas refeições` <- factor(data$`Vegetais nas refeições`, levels = c("Difícil", "Um pouco", "Regular", "Frequente", "Bastante"))
data$Trabalha <- factor(data$Trabalha, levels = c("Não trabalha", "Meio Período", "Tempo Integral"))
data$Relacionamento <- factor(data$Relacionamento, levels = c("Solteirx", "Em um relacionamento", "Casadx"))
data$Relacionamento <- revalue(data$Relacionamento, c("Solteirx" = "Solteiro",
"Casadx" = "Casado"))
data$Altura <- as.numeric(unlist(altura))
example_dataframe <- as.data.frame(rbind(
c("Sexo", "'Masculino', 'Feminino'", "Qualitativa Nominal"),
c("Ano letivo", "1, 2, 3, 4...", "Quantitativa Discreta"),
c("Peso", "61.2, 85, 119.3, ...", "Quantitativa Contínua"),
c("Altura", "1.75, 1.67, 1.68, ...", "Quantitativa Contínua"),
c("Trabalho", "'Tempo Integral', 'Meio Período', 'Não trabalha'", "Qualitativa Ordinal"),
c("Relacionamento", "'Solteiro', 'Em um relacionamento', 'Morando junto', ...", "Qualitativa Nominal"),
c("Cozinha", "'Sempre', 'Quase todo dia', 'Nunca', ...", "Qualitativa Ordinal"),
c("Come Fora", "'Sempre', 'Quase todo dia', 'Nunca', ...", "Qualitativa Ordinal"),
c("Culinária Favorita", "'Árabe', 'Oriental', 'Africana', ...", "Qualitativa Nominal"),
c("Pratica exercícios", "'Sempre', 'Quase todo dia', 'Nunca', ...", "Qualitativa Ordinal"),
c("Pratica esportes", "'Sim', 'Não'", "Qualitativa Nominal"),
c("Toma Vitamina", "'Sim', 'Não'", "Qualitativa Nominal")
))
colnames(example_dataframe) <- c("Variável", "Possíveis Valores", "Tipo de Variável")
tab_frequencia_relacionamento <- as.data.frame(table(data$Relacionamento))
tab_frequencia_relacionamento$prop <- round(tab_frequencia_relacionamento$Freq/sum(tab_frequencia_relacionamento$Freq), digits = 4)
tab_frequencia_relacionamento$porc <- scales::percent(tab_frequencia_relacionamento$prop)
colnames(tab_frequencia_relacionamento) <- c("Relacionamento", "Frequência", "Proporção", "Porcentagem")
freq_peso <- cut(data$Peso, breaks = c(45, 60, 75, 90, 105, 120))
tab_frequencia_peso <- as.data.frame(with(data, table(freq_peso, useNA = 'ifany')))
tab_frequencia_peso$prop <- round(tab_frequencia_peso$Freq/sum(tab_frequencia_peso$Freq), digits = 4)
tab_frequencia_peso$porc<- scales::percent(tab_frequencia_peso$prop)
colnames(tab_frequencia_peso) <- c("Faixa de peso", "Frequência", "Proporção", "Porcentagem")
tab_frequencia_ano_letivo <- as.data.frame(table(data$`Ano letivo`))
tab_frequencia_ano_letivo$prop <- round(tab_frequencia_ano_letivo$Freq/sum(tab_frequencia_ano_letivo$Freq), digits = 4)
tab_frequencia_ano_letivo$porc <- scales::percent(tab_frequencia_ano_letivo$prop)
colnames(tab_frequencia_ano_letivo) <- c("Ano Letivo", "Frequência", "Proporção", "Porcentagem")
#tabela culinária sexo
tb <- table(data$`Culinária favorita`, data$Sexo)
tb <- as.data.frame(cbind(rownames(tb), as.numeric(tb[,1]), as.numeric(tb[,2])))
colnames(tb) <- c("Culinária/Sexo", "Feminino", "Masculino")
tb$Feminino <- as.numeric(as.character(tb$Feminino))
tb$Masculino <- as.numeric(as.character(tb$Masculino))
tb$`Culinária/Sexo` <- as.character(tb$`Culinária/Sexo`)
tb <- rbind(tb, c("Total", sum(tb$Feminino), sum(tb$Masculino)))
tb$Feminino <- as.numeric(as.character(tb$Feminino))
tb$Masculino <- as.numeric(as.character(tb$Masculino))
tb$Total <- tb$Feminino + tb$Masculino
tb$`Culinária/Sexo` <- as.factor(tb$`Culinária/Sexo`)
#handling NA
#sapply(data, function(x) sum(is.na(x)))
data[is.na(data$Peso),]$Peso <- mean(data$Peso, na.rm = TRUE)
data[is.na(data$Trabalha),]$Trabalha <- "Não trabalha"
data[is.na(data$Relacionamento),]$Relacionamento <- "Solteiro"
data[is.na(data$Cozinha),]$Cozinha <- "Às vezes"
data$`Culinária favorita` <- as.character(data$`Culinária favorita`)
data$`Culinária favorita`[is.na(data$`Culinária favorita`)] <- "Nenhuma"
data$`Culinária favorita` <- as.factor(data$`Culinária favorita`)
data$`Pratica esportes`[is.na(data$`Pratica esportes`)] <- "Não"
data$Peso <- round(data$Peso)
setwd("/home/joao/Documents/BIG/v2/")
library(plyr)
data <- read.csv("data/food-choices/clean_data.csv")[,-1]
altura <- read.csv("data/altura.csv")[-1]
colnames(data) <- gsub(".", ' ',colnames(data), fixed = TRUE)
data$Cozinha <- factor(data$Cozinha, levels = c("Nunca", "Durante as férias", "Às vezes", "Quase todo dia", "Todo dia"))
data$`Come fora` <- factor(data$`Come fora`, levels = c("Nunca", "1-2 vezes", "2-3 vezes", "3-5 vezes", "Todo dia"))
data$`Pratica exercícios` <- factor(data$`Pratica exercícios`, levels = c("Nunca", "Uma vez por semana", "2-3 vezes por semana", "Todo dia"))
data$`Vegetais nas refeições` <- factor(data$`Vegetais nas refeições`, levels = c("Difícil", "Um pouco", "Regular", "Frequente", "Bastante"))
data$Trabalha <- factor(data$Trabalha, levels = c("Não trabalha", "Meio Período", "Tempo Integral"))
data$Relacionamento <- factor(data$Relacionamento, levels = c("Solteirx", "Em um relacionamento", "Casadx"))
data$Relacionamento <- revalue(data$Relacionamento, c("Solteirx" = "Solteiro",
"Casadx" = "Casado"))
data$Altura <- as.numeric(unlist(altura))
example_dataframe <- as.data.frame(rbind(
c("Sexo", "'Masculino', 'Feminino'", "Qualitativa Nominal"),
c("Ano letivo", "1, 2, 3, 4...", "Quantitativa Discreta"),
c("Peso", "61.2, 85, 119.3, ...", "Quantitativa Contínua"),
c("Altura", "1.75, 1.67, 1.68, ...", "Quantitativa Contínua"),
c("Trabalho", "'Tempo Integral', 'Meio Período', 'Não trabalha'", "Qualitativa Ordinal"),
c("Relacionamento", "'Solteiro', 'Em um relacionamento', 'Morando junto', ...", "Qualitativa Nominal"),
c("Cozinha", "'Sempre', 'Quase todo dia', 'Nunca', ...", "Qualitativa Ordinal"),
c("Come Fora", "'Sempre', 'Quase todo dia', 'Nunca', ...", "Qualitativa Ordinal"),
c("Culinária Favorita", "'Árabe', 'Oriental', 'Africana', ...", "Qualitativa Nominal"),
c("Pratica exercícios", "'Sempre', 'Quase todo dia', 'Nunca', ...", "Qualitativa Ordinal"),
c("Pratica esportes", "'Sim', 'Não'", "Qualitativa Nominal"),
c("Toma Vitamina", "'Sim', 'Não'", "Qualitativa Nominal")
))
colnames(example_dataframe) <- c("Variável", "Possíveis Valores", "Tipo de Variável")
tab_frequencia_relacionamento <- as.data.frame(table(data$Relacionamento))
tab_frequencia_relacionamento$prop <- round(tab_frequencia_relacionamento$Freq/sum(tab_frequencia_relacionamento$Freq), digits = 4)
tab_frequencia_relacionamento$porc <- scales::percent(tab_frequencia_relacionamento$prop)
colnames(tab_frequencia_relacionamento) <- c("Relacionamento", "Frequência", "Proporção", "Porcentagem")
freq_peso <- cut(data$Peso, breaks = c(45, 60, 75, 90, 105, 120))
tab_frequencia_peso <- as.data.frame(with(data, table(freq_peso, useNA = 'ifany')))
tab_frequencia_peso$prop <- round(tab_frequencia_peso$Freq/sum(tab_frequencia_peso$Freq), digits = 4)
tab_frequencia_peso$porc<- scales::percent(tab_frequencia_peso$prop)
colnames(tab_frequencia_peso) <- c("Faixa de peso", "Frequência", "Proporção", "Porcentagem")
tab_frequencia_ano_letivo <- as.data.frame(table(data$`Ano letivo`))
tab_frequencia_ano_letivo$prop <- round(tab_frequencia_ano_letivo$Freq/sum(tab_frequencia_ano_letivo$Freq), digits = 4)
tab_frequencia_ano_letivo$porc <- scales::percent(tab_frequencia_ano_letivo$prop)
colnames(tab_frequencia_ano_letivo) <- c("Ano Letivo", "Frequência", "Proporção", "Porcentagem")
#tabela culinária sexo
tb <- table(data$`Culinária favorita`, data$Sexo)
tb <- as.data.frame(cbind(rownames(tb), as.numeric(tb[,1]), as.numeric(tb[,2])))
colnames(tb) <- c("Culinária/Sexo", "Feminino", "Masculino")
tb$Feminino <- as.numeric(as.character(tb$Feminino))
tb$Masculino <- as.numeric(as.character(tb$Masculino))
tb$`Culinária/Sexo` <- as.character(tb$`Culinária/Sexo`)
tb <- rbind(tb, c("Total", sum(tb$Feminino), sum(tb$Masculino)))
tb$Feminino <- as.numeric(as.character(tb$Feminino))
tb$Masculino <- as.numeric(as.character(tb$Masculino))
tb$Total <- tb$Feminino + tb$Masculino
tb$`Culinária/Sexo` <- as.factor(tb$`Culinária/Sexo`)
#handling NA
#sapply(data, function(x) sum(is.na(x)))
data[is.na(data$Peso),]$Peso <- mean(data$Peso, na.rm = TRUE)
data[is.na(data$Trabalha),]$Trabalha <- "Não trabalha"
data[is.na(data$Relacionamento),]$Relacionamento <- "Solteiro"
data[is.na(data$Cozinha),]$Cozinha <- "Às vezes"
data$`Culinária favorita` <- as.character(data$`Culinária favorita`)
data$`Culinária favorita`[is.na(data$`Culinária favorita`)] <- "Nenhuma"
data$`Culinária favorita` <- as.factor(data$`Culinária favorita`)
data$`Pratica esportes`[is.na(data$`Pratica esportes`)] <- "Não"
data$Peso <- round(data$Peso)
head(data)
write.csv(data, "handled_data.csv")
